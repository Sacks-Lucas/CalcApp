{"version":3,"sources":["components/Button/Button.jsx","App.jsx","components/Result.jsx","components/Functions.jsx","components/Numbers.jsx","components/MathOperations.jsx","index.jsx"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","stack","setStack","items","words","value","length","onClickNumber","number","onContentClear","onDelete","newStack","substring","onClickOperation","operation","onClickEqual","equal","eval","toString","Result","defaultProps","Functions","numbers","renderButtons","map","Numbers","array","renderFunction","item","MathOperations","ReactDOM","render","document","getElementById"],"mappings":"0GAAA,sBAiBeA,IAbA,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAd,OACP,wBAAQC,UAAWH,EAAMI,QAAS,kBAAIF,EAAaD,IAAnD,SACI,+BAAOA,Q,+tCCGbI,IAAM,SAANA,MAAa,IAAD,UACWC,oDAAS,IADpB,qLACPC,MADO,cACAC,SADA,cAERC,MAAQC,oDAAMH,MAAO,gBACrBI,MAAQF,MAAMG,OAAS,EAAIH,MAAMA,MAAMG,OAAO,GAAG,IACvD,OAAO,oEAAMT,UAAU,mBAAhB,UACH,2DAAC,kDAAD,CAAQQ,MAAQA,QAChB,2DAAC,mDAAD,CAASE,cAAe,SAAAC,GAAM,OAAIN,SAAS,GAAD,OAAID,OAAJ,OAAYO,OAEtD,2DAAC,qDAAD,CAAWC,eAAgB,kBAAMP,SAAS,KACzCQ,SAAU,WACN,GAAGT,MAAMK,OAAQ,EAAE,CACnB,IAAMK,EAASV,MAAMW,UAAU,EAAEX,MAAMK,OAAO,GAC9CJ,SAASS,OAEd,2DAAC,0DAAD,CACAE,iBAAmB,SAAAC,GAAS,OAAIZ,SAAS,GAAD,OAAID,OAAJ,OAAYa,KACpDC,aAAe,sBAAAC,OACXd,SAASe,KAAKhB,OAAOiB,mBAKlBnB,2B,8BC/Bf,gBAGMoB,EAAS,SAAC,GAAD,IAAEd,EAAF,EAAEA,MAAF,OACX,qBAAKR,UAAU,SAAf,SACSQ,KASbc,EAAOC,aAAe,CAClBf,MAAO,KAGIc,O,6BClBf,uBAiBeE,IAZG,SAAC,GAAD,IAAEZ,EAAF,EAAEA,eAAgBC,EAAlB,EAAkBA,SAAlB,OACd,0BAASb,UAAU,YAAnB,UACA,cAAC,IAAD,CAAQH,KAAK,mBAAmBC,KAAK,QAAQC,aAAea,IAC5D,cAAC,IAAD,CAAQd,KAAK,SAASC,aAAec,S,6BCRzC,uBAIMY,EAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAE7BC,EAAgB,SAAAhB,GAElB,OAAOe,EAAQE,KADM,SAAAhB,GAAM,OAAK,cAAC,IAAD,CAAqBb,KAAOa,EAAOU,WAAYtB,aAAgBW,GAAlDC,OAclCiB,IAVC,SAAC,GAAD,IAAElB,EAAF,EAAEA,cAAF,OACZ,yBAASV,UAAU,UAAnB,SAEQ0B,EAAchB,O,6BCd1B,uBAIMmB,EAAM,CAAC,IAAI,IAAI,IAAI,KAEnBC,EAAiB,SAAAd,GAEnB,OAAOa,EAAMF,KADG,SAAAI,GAAI,OAAI,cAAC,IAAD,CAAmBjC,KAAQiC,EAAMhC,aAAgBiB,GAApCe,OAkB1BC,IAdQ,SAAC,GAAD,IAAEhB,EAAF,EAAEA,iBAAiBE,EAAnB,EAAmBA,aAAnB,OACnB,0BAASlB,UAAU,kBAAnB,UAEQ8B,EAAed,GAEnB,cAAC,IAAD,CAAQlB,KAAM,IAAIC,aAAgBmB,S,8BChB1C,8CAQAe,IAASC,OAAO,cAAC,IAAD,IAAaC,SAASC,eAAe,U","file":"static/js/main.cad1404b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Button.css'\r\n\r\nconst Button = ({type, text, clickHandler }) => (\r\n        <button className={type} onClick={()=>clickHandler(text)}>\r\n            <span>{text}</span>\r\n        </button>\r\n    )\r\n\r\n\r\nButton.propTypes = {\r\n    type: PropTypes.string,\r\n    text: PropTypes.string.isRequired,\r\n    clickHandler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button","/* eslint no-eval:0 */ \r\nimport React, {useState} from 'react'\r\nimport words from 'lodash.words'\r\nimport Result from './components/Result'\r\nimport Functions from './components/Functions'\r\nimport Numbers from './components/Numbers'\r\nimport MathOperations from './components/MathOperations'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    const [stack, setStack]= useState(\"\")\r\n    const items = words(stack, /[^-^+^*^/]+/g)\r\n    const value = items.length > 0 ? items[items.length-1]:\"0\"\r\n    return(<main className='react-calculator'>\r\n        <Result value ={value} />\r\n        <Numbers onClickNumber={number => setStack(`${stack}${number}`)\r\n        }></Numbers>\r\n        <Functions onContentClear={() => setStack('')}\r\n         onDelete={() => {\r\n             if(stack.length >0){\r\n             const newStack=stack.substring(0,stack.length-1)\r\n             setStack(newStack)\r\n            }}}></Functions>\r\n        <MathOperations \r\n        onClickOperation= {operation => setStack(`${stack}${operation}`)}\r\n        onClickEqual ={equal =>{\r\n            setStack(eval(stack).toString())\r\n            }}></MathOperations>\r\n    </main>)\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Result = ({value}) => (\r\n    <div className=\"result\">\r\n            {value}\r\n        </div>\r\n    )\r\n\r\n\r\nResult.propTypes = {\r\n    value: PropTypes.string.isRequired\r\n}\r\n\r\nResult.defaultProps = {\r\n    value: \"0\"\r\n}\r\n\r\nexport default Result","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button/Button'\r\n\r\n\r\nconst Functions = ({onContentClear, onDelete}) => (\r\n    <section className=\"functions\">\r\n    <Button type=\"button-long-text\" text=\"clear\" clickHandler= {onContentClear}/>\r\n    <Button text=\"&larr;\" clickHandler= {onDelete}/>\r\n    </section>\r\n)\r\n\r\nFunctions.propTypes= {\r\n    onContentClear: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Functions","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button/Button'\r\n\r\nconst numbers = [7,8,9,4,5,6,1,2,3,0]\r\n\r\nconst renderButtons = onClickNumber => {\r\n    const renderButton = number => (<Button key={number} text ={number.toString()} clickHandler = {onClickNumber}></Button>)\r\n    return numbers.map(renderButton) \r\n}\r\n\r\nconst Numbers = ({onClickNumber}) => (\r\n    <section className=\"numbers\">\r\n        {\r\n            renderButtons(onClickNumber)\r\n        }\r\n        </section>\r\n)\r\n\r\nNumbers.propTypes= {onClickNumber: PropTypes.func.isRequired}\r\n\r\nexport default Numbers","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button/Button'\r\n\r\nconst array=[\"+\",\"-\",\"*\",\"/\"]\r\n\r\nconst renderFunction = onClickOperation => {\r\n    const funcion = item =>(<Button key={item} text = {item} clickHandler = {onClickOperation}></Button>)\r\n    return array.map(funcion)\r\n}\r\n\r\nconst MathOperations = ({onClickOperation,onClickEqual}) =>(\r\n    <section className=\"math-operations\">\r\n        {\r\n            renderFunction(onClickOperation)\r\n        }\r\n        <Button text =\"=\" clickHandler = {onClickEqual}></Button>\r\n        </section>\r\n)\r\n\r\nMathOperations.propTypes ={\r\n    onClickOperation: PropTypes.func.isRequired,\r\n    onClickEqual: PropTypes.func.isRequired\r\n}\r\n\r\nexport default MathOperations","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n//Importo el componente\r\nimport App from './App'\r\n\r\n//Utilizo el componente\r\n\r\nReactDOM.render(<App></App>, document.getElementById('root') )\r\n\r\n"],"sourceRoot":""}