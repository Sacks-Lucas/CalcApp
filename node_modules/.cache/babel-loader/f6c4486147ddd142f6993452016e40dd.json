{"ast":null,"code":"var _jsxFileName = \"C:\\\\Curso React\\\\react\\\\calc-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n//Importacion\n\n/* eslint no-eval:0 */\nimport React, { useState } from 'react';\nimport words from 'lodash.words';\nimport Result from './components/Result';\nimport Functions from './components/Functions';\nimport Numbers from './components/Numbers';\nimport MathOperations from './components/MathOperations';\nimport './App.css'; //Genracion de la funcion del componente\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stack, setStack] = useState(\"\");\n  const items = words(stack, /[^-^+^*^/]+/g); //cuerpo de la funcion\n\n  const value = items.length > 0 ? items[items.length - 1] : \"0\";\n  console.log(\"Renderizacion de App\", value);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"react-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(Result, {\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n      onClickNumber: number => {\n        console.log(\"Click en Number:\", number);\n        setStack(`${stack}${number}`);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Functions, {\n      onContentClear: () => {\n        console.log(\"Content Clear\");\n        setStack('');\n      },\n      onDelete: () => {\n        if (stack.length > 0) {\n          console.log(\"On Delete\");\n          const newStack = stack.substring(0, stack.length - 1);\n          setStack(newStack);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MathOperations, {\n      onClickOperation: operation => {\n        console.log(\"Operation:\", operation);\n        setStack(`${stack}${operation}`);\n      },\n      onClickEqual: equal => {\n        console.log(\"Equal:\", equal);\n        setStack(eval(stack).toString());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}; //Exportacion\n\n\n_s(App, \"TqqG+sXc07tTDVxw6nK/3BR2Dho=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Curso React/react/calc-app/src/App.jsx"],"names":["React","useState","words","Result","Functions","Numbers","MathOperations","App","stack","setStack","items","value","length","console","log","number","newStack","substring","operation","equal","eval","toString"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAO,WAAP,C,CAEA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAMS,KAAK,GAAGR,KAAK,CAACM,KAAD,EAAQ,cAAR,CAAnB,CAHc,CAId;;AACA,QAAMG,KAAK,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAf,GAAmBF,KAAK,CAACA,KAAK,CAACE,MAAN,GAAa,CAAd,CAAxB,GAAyC,GAAvD;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,KAApC;AACA,sBAAO;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA,4BACH,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAGA;AAAhB;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,OAAD;AAAS,MAAA,aAAa,EAAEI,MAAM,IAAI;AAC9BF,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BC,MAA/B;AACAN,QAAAA,QAAQ,CAAE,GAAED,KAAM,GAAEO,MAAO,EAAnB,CAAR;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,YAFG,eAMH,QAAC,SAAD;AAAW,MAAA,cAAc,EAAE,MAAM;AAC7BF,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAL,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,OAHD;AAIC,MAAA,QAAQ,EAAE,MAAM;AACZ,YAAGD,KAAK,CAACI,MAAN,GAAc,CAAjB,EAAmB;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,gBAAME,QAAQ,GAACR,KAAK,CAACS,SAAN,CAAgB,CAAhB,EAAkBT,KAAK,CAACI,MAAN,GAAa,CAA/B,CAAf;AACAH,UAAAA,QAAQ,CAACO,QAAD,CAAR;AACA;AAAC;AATN;AAAA;AAAA;AAAA;AAAA,YANG,eAiBH,QAAC,cAAD;AACA,MAAA,gBAAgB,EAAGE,SAAS,IAAI;AAC5BL,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BI,SAA1B;AACAT,QAAAA,QAAQ,CAAE,GAAED,KAAM,GAAEU,SAAU,EAAtB,CAAR;AACH,OAJD;AAKA,MAAA,YAAY,EAAGC,KAAK,IAAG;AACnBN,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBK,KAArB;AACAV,QAAAA,QAAQ,CAACW,IAAI,CAACZ,KAAD,CAAJ,CAAYa,QAAZ,EAAD,CAAR;AACC;AARL;AAAA;AAAA;AAAA;AAAA,YAjBG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA2BH,CAnCD,C,CAqCA;;;GArCMd,G;;KAAAA,G;AAuCN,eAAeA,GAAf","sourcesContent":["//Importacion\r\n/* eslint no-eval:0 */ \r\nimport React, {useState} from 'react'\r\nimport words from 'lodash.words'\r\nimport Result from './components/Result'\r\nimport Functions from './components/Functions'\r\nimport Numbers from './components/Numbers'\r\nimport MathOperations from './components/MathOperations'\r\nimport './App.css'\r\n\r\n//Genracion de la funcion del componente\r\n\r\nconst App = () => {\r\n    const [stack, setStack]= useState(\"\")\r\n\r\n    const items = words(stack, /[^-^+^*^/]+/g)\r\n    //cuerpo de la funcion\r\n    const value = items.length > 0 ? items[items.length-1]:\"0\"\r\n\r\n    console.log(\"Renderizacion de App\", value)\r\n    return(<main className='react-calculator'>\r\n        <Result value ={value} />\r\n        <Numbers onClickNumber={number => {\r\n            console.log(\"Click en Number:\",number)\r\n            setStack(`${stack}${number}`)\r\n        }}></Numbers>\r\n        <Functions onContentClear={() => {\r\n            console.log(\"Content Clear\")\r\n            setStack('')\r\n        }}\r\n         onDelete={() => {\r\n             if(stack.length >0){\r\n             console.log(\"On Delete\")\r\n             const newStack=stack.substring(0,stack.length-1)\r\n             setStack(newStack)\r\n            }}}>\r\n        </Functions>\r\n        <MathOperations \r\n        onClickOperation= {operation => {\r\n            console.log(\"Operation:\", operation)\r\n            setStack(`${stack}${operation}`)\r\n        }}\r\n        onClickEqual ={equal =>{\r\n            console.log(\"Equal:\",equal)\r\n            setStack(eval(stack).toString())\r\n            }}></MathOperations>\r\n    </main>)\r\n}\r\n\r\n//Exportacion\r\n\r\nexport default App\r\n\r\n"]},"metadata":{},"sourceType":"module"}