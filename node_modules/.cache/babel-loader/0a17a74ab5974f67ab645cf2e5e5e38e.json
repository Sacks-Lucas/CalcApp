{"ast":null,"code":"var _jsxFileName = \"C:\\\\Curso React\\\\react\\\\calc-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint no-eval:0 */\nimport React, { useState } from 'react';\nimport words from 'lodash.words';\nimport Result from './components/Result';\nimport Functions from './components/Functions';\nimport Numbers from './components/Numbers';\nimport MathOperations from './components/MathOperations';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stack, setStack] = useState(\"\");\n  const items = words(stack, /[^-^+^*^/]+/g);\n  const value = items.length > 0 ? items[items.length - 1] : \"0\";\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"react-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(Result, {\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n      onClickNumber: number => setStack(`${stack}${number}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Functions, {\n      onContentClear: () => setStack(''),\n      onDelete: () => {\n        if (stack.length > 0) {\n          const newStack = stack.substring(0, stack.length - 1);\n          setStack(newStack);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MathOperations, {\n      onClickOperation: operation => setStack(`${stack}${operation}`),\n      onClickEqual: equal => {\n        setStack(eval(stack).toString());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"TqqG+sXc07tTDVxw6nK/3BR2Dho=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Curso React/react/calc-app/src/App.jsx"],"names":["React","useState","words","Result","Functions","Numbers","MathOperations","App","stack","setStack","items","value","length","number","newStack","substring","operation","equal","eval","toString"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMS,KAAK,GAAGR,KAAK,CAACM,KAAD,EAAQ,cAAR,CAAnB;AACA,QAAMG,KAAK,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAf,GAAmBF,KAAK,CAACA,KAAK,CAACE,MAAN,GAAa,CAAd,CAAxB,GAAyC,GAAvD;AACA,sBAAO;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA,4BACH,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAGD;AAAhB;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,OAAD;AAAS,MAAA,aAAa,EAAEE,MAAM,IAAIJ,QAAQ,CAAE,GAAED,KAAM,GAAEK,MAAO,EAAnB;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFG,eAIH,QAAC,SAAD;AAAW,MAAA,cAAc,EAAE,MAAMJ,QAAQ,CAAC,EAAD,CAAzC;AACC,MAAA,QAAQ,EAAE,MAAM;AACZ,YAAGD,KAAK,CAACI,MAAN,GAAc,CAAjB,EAAmB;AACnB,gBAAME,QAAQ,GAACN,KAAK,CAACO,SAAN,CAAgB,CAAhB,EAAkBP,KAAK,CAACI,MAAN,GAAa,CAA/B,CAAf;AACAH,UAAAA,QAAQ,CAACK,QAAD,CAAR;AACA;AAAC;AALN;AAAA;AAAA;AAAA;AAAA,YAJG,eAWH,QAAC,cAAD;AACA,MAAA,gBAAgB,EAAGE,SAAS,IAAIP,QAAQ,CAAE,GAAED,KAAM,GAAEQ,SAAU,EAAtB,CADxC;AAEA,MAAA,YAAY,EAAGC,KAAK,IAAG;AACnBR,QAAAA,QAAQ,CAACS,IAAI,CAACV,KAAD,CAAJ,CAAYW,QAAZ,EAAD,CAAR;AACC;AAJL;AAAA;AAAA;AAAA;AAAA,YAXG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBH,CArBD;;GAAMZ,G;;KAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["/* eslint no-eval:0 */ \r\nimport React, {useState} from 'react'\r\nimport words from 'lodash.words'\r\nimport Result from './components/Result'\r\nimport Functions from './components/Functions'\r\nimport Numbers from './components/Numbers'\r\nimport MathOperations from './components/MathOperations'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    const [stack, setStack]= useState(\"\")\r\n    const items = words(stack, /[^-^+^*^/]+/g)\r\n    const value = items.length > 0 ? items[items.length-1]:\"0\"\r\n    return(<main className='react-calculator'>\r\n        <Result value ={value} />\r\n        <Numbers onClickNumber={number => setStack(`${stack}${number}`)\r\n        }></Numbers>\r\n        <Functions onContentClear={() => setStack('')}\r\n         onDelete={() => {\r\n             if(stack.length >0){\r\n             const newStack=stack.substring(0,stack.length-1)\r\n             setStack(newStack)\r\n            }}}>\r\n        </Functions>\r\n        <MathOperations \r\n        onClickOperation= {operation => setStack(`${stack}${operation}`)}\r\n        onClickEqual ={equal =>{\r\n            setStack(eval(stack).toString())\r\n            }}></MathOperations>\r\n    </main>)\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}